---
import { getRelativeLocaleUrl, toCodes } from "astro:i18n";
import config from "../../astro.config.mjs";

function changeCurrentUrlByLocale(newLocale: string): string {
  const regex = new RegExp(`^/${Astro.currentLocale}(/|$)`);
  const url = Astro.url.pathname;
  const urlWithoutLocale = url.replace(regex, "/");
  return getRelativeLocaleUrl(newLocale, urlWithoutLocale);
}

const getLabel = (locale: string) => {
  switch (locale) {
    case "es":
      return "EspaÃ±ol";
    default:
      return "English";
  }
};

const languages = toCodes(config.i18n.locales)
  .filter((locale) => locale !== Astro.currentLocale)
  .map((locale) => {
    return {
      path: changeCurrentUrlByLocale(locale),
      label: getLabel(locale),
    };
  });
---

<div class="relative group">
  <button
    class="flex items-center gap-1 px-2 py-1 text-sm rounded hover:bg-gray-700"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="h-4 w-4"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
    >
      <circle cx="12" cy="12" r="10"></circle>
      <path
        d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"
      ></path>
      <path d="M2 12h20"></path>
    </svg>
    {getLabel(Astro.currentLocale)}
  </button>
  <div
    class="absolute right-0 mt-2 w-24 bg-popover rounded-md shadow-lg opacity-0 group-hover:opacity-100 transition-opacity"
  >
    {
      languages.map((lang) => (
        <a
          href={lang.path}
          class="block px-4 py-2 text-sm hover:bg-accent hover:text-accent-foreground rounded-md"
        >
          {lang.label}
        </a>
      ))
    }
  </div>
</div>
