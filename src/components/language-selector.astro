---
import { getRelativeLocaleUrl, toCodes } from "astro:i18n";
import config from "../../astro.config.mjs";
import { t } from "../lib/utils/il8n";
import LanguageIcon from "./language-icon.astro";

function changeCurrentUrlByLocale(newLocale: string): string {
  const regex = new RegExp(`^/${t(Astro)}(/|$)`);
  const url = Astro.url.pathname;
  const urlWithoutLocale = url.replace(regex, "/");
  return getRelativeLocaleUrl(newLocale, urlWithoutLocale);
}

const getLabel = (locale: string) => {
  switch (locale) {
    case "es":
      return "ES";
    default:
      return "EN";
  }
};

const languages = toCodes(config.i18n?.locales ?? [])
  .filter((locale) => locale !== t(Astro))
  .map((locale) => {
    return {
      path: changeCurrentUrlByLocale(locale),
      label: getLabel(locale),
    };
  });
---

<div class="relative group">
  <button class="flex items-center px-2 py-1 text-sm rounded">
    <LanguageIcon />
    <span class="pl-1 font-medium text-[15px]">{getLabel(t(Astro))}</span>
  </button>
  <div
    class="absolute mt-2 bg-popover rounded-md shadow-lg opacity-0 group-hover:opacity-100 transition-opacity">
    {
      languages.map((lang) => (
        <a
          href={lang.path}
          class="flex items-center gap-1 px-2 py-1 ml-1 bg-gray-800 hover:bg-gray-700 text-white rounded-md transition-colors">
          <LanguageIcon />
          <span class="font-semibold">{lang.label}</span>
        </a>
      ))
    }
  </div>
</div>
